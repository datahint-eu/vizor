@inherits ViInputBase<bool>

<label class="form-check form-switch">
	<input class="form-check-input" type="checkbox" @attributes="@AdditionalAttributes" @bind-value="@Value" @bind-value:event="oninput" checked="@Value">
	@if (ChildContent != null || Text != null)
	{
		<span class="form-check-label">
			@ChildContent
			@Text
		</span>
	}
	@if (Description != null)
	{
		<span class="form-check-description">@Description</span>
	}
</label>

@code {

	[Parameter]
	public RenderFragment? ChildContent { get; set; }

	[Parameter]
	public string? Text { get; set; }

	[Parameter]
	public string? Description { get; set; }

	protected override bool TryParseValueFromString(string? value, out bool result, [NotNullWhen(false)] out string validationErrorMessage)
	{
		if (string.IsNullOrWhiteSpace(value) || !bool.TryParse(value, out var boolValue))
		{
			result = false;
			validationErrorMessage = $"Invalid input: '{value}'";
			return false;
		}
		else
		{
			result = boolValue;
			validationErrorMessage = string.Empty;
			return true;
		}
	}
}