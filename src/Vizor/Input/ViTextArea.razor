@*
//   Copyright 2022 DataHint BV
//   Copyright 2022 Ben Motmans
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
*@

@inherits ViInputBase<string>

<textarea class="form-control @CssClass @validationCssClass"
		  rows="@Rows"
		  placeholder="@Placeholder" @attributes="@AdditionalAttributes"
		  disabled="@IsDisabled.ToConditionalAttribute()" readonly="@IsReadOnly.ToConditionalAttribute()"
		  aria-invalid="@isValid.ToConditionalAttributeInverse()"
		  @bind="@BindableStringValue" @bind:event="oninput">
</textarea>
@RenderValidationMessages()

<!-- TODO: after bind event, ... -->
@code {

	[Parameter]
	public int Rows { get; set; } = 6;

	protected override bool TryParseValueFromString(string? value, [MaybeNullWhen(false)] out string result, [NotNullWhen(false)] out string? validationErrorMessage)
	{
		result = value ?? string.Empty;
		validationErrorMessage = null;
		return true;
	}
}
