@*
//   Copyright 2022 DataHint BV
//   Copyright 2022 Ben Motmans
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
*@

@inherits ViComponentBase

<header class="navbar navbar-expand-md d-print-none @ColorConverter.ToNavBarColor(Color) @ToPlacement(Placement) @CssClass" @attributes="AdditionalAttributes">
	<div class="container-xl">
		<CascadingValue IsFixed="true" Value="@id" Name="ViNavBarId">
			@Toggler
		</CascadingValue>
		@Brand
		
		@if (MenuItems != null)
		{
			<div class="collapse navbar-collapse" id="@id">
				<ul class="navbar-nav me-auto mb-2 mb-lg-0">
					<CascadingValue IsFixed="true" Value="true" Name="ViAutoClose">
						@MenuItems
					</CascadingValue>
				</ul>
			</div>
		}

		@Start
		@if (End != null)
		{
			<div class="navbar-nav flex-row order-md-last">
				@End
			</div>
		}
	</div>
</header>

@code {

	// see https://getbootstrap.com/docs/5.2/components/navbar/

	//TODO: nav-scrollable

	private string id = RazorExtensions.RandomId();

	[Parameter]
	public string? Color { get; set; }

	[Parameter]
	public NavbarPlacement Placement { get; set; }

	[Parameter]
	public RenderFragment? Brand { get; set; }

	[Parameter]
	public RenderFragment? Toggler { get; set; }

	[Parameter]
	public RenderFragment? MenuItems { get; set; }

	[Parameter]
	public RenderFragment? End { get; set; }

	[Parameter]
	public RenderFragment? Start { get; set; }

	public static string? ToPlacement(NavbarPlacement placement)
	{
		return placement switch
		{
			NavbarPlacement.FixedTop => "fixed-top",
			NavbarPlacement.FixedBottom => "fixed-bottom",
			NavbarPlacement.StickyTop => "sticky-top",
			NavbarPlacement.StickyBottom => "sticky-bottom",
			_ => null
		};
	}
}
