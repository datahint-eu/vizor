@*
//   Copyright 2022 DataHint BV
//   Copyright 2022 Ben Motmans
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
*@

@if (Style == ValueListStyle.List)
{
	<dt class="col-@LabelWidth">
		@Icon
		@if (!string.IsNullOrEmpty(FontIcon))
		{
			<i class="icon @FontIcon me-2" />
		}
		@Label
	</dt>
	<dd class="col-@ValueWidth">@ChildContent</dd>
}
else if (Style == ValueListStyle.Grid)
{
	<div class="datagrid-item">
		<div class="datagrid-title">
			@Icon
			@if (!string.IsNullOrEmpty(FontIcon))
			{
			   <i class="icon @FontIcon me-2" />
			}
			@Label
		</div>
		<div class="datagrid-content">@ChildContent</div>
	</div>
}
else
{
	throw new ArgumentException($"{nameof(ValueListStyle)} {Style} not supported");
}

@code {

	private int ValueWidth => 12 - LabelWidth;

	[CascadingParameter(Name = "ValueListStyle")]
	public ValueListStyle Style { get; set; }

	[CascadingParameter(Name = "LabelWidth")]
	public int LabelWidth { get; set; }

	[Parameter, EditorRequired]
	public string Label { get; set; } = default!;

	[Parameter, EditorRequired]
	public RenderFragment ChildContent { get; set; } = default!;

	[Parameter]
	public string? FontIcon { get; set; }

	[Parameter]
	public RenderFragment? Icon { get; set; }
}
