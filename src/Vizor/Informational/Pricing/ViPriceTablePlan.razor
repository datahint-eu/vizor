@*
//   Copyright 2022 DataHint BV
//   Copyright 2022 Ben Motmans
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
*@

@namespace Vizor
@inherits ViComponentBase

<td class="text-center">
	@if (ShowInfo)
	{
		<div class="text-uppercase text-muted font-weight-medium">@Name</div>
		<div class="display-6 fw-bold my-3">@Price</div>
	}
	@if (ShowSelect)
	{
		<ViButton CssClass="w-100" Color="@(IsHighlighted ? ThemeColor.Success : ThemeColor.None)" OnClick="@OnSelect">
			@SelectContent
			@SelectText
		</ViButton>
	}
</td>

@code {

	[CascadingParameter(Name = "ViPriceTable")]
	public ViPriceTable? Parent { get; set; }

	[CascadingParameter(Name = "ShowSelect")]
	public bool ShowSelect { get; set; }

	[CascadingParameter(Name = "ShowInfo")]
	public bool ShowInfo { get; set; }

	[Parameter, EditorRequired]
	public string Name { get; set; } = default!;

	[Parameter, EditorRequired]
	public string Price { get; set; } = default!;

	[Parameter]
	public EventCallback<MouseEventArgs> OnSelect { get; set; }

	[Parameter]
	public bool IsHighlighted { get; set; }

	[Parameter]
	public string? HighlightText { get; set; }

	[Parameter]
	public RenderFragment? HighlightContent { get; set; }

	[Parameter]
	public string? SelectText { get; set; }

	[Parameter]
	public RenderFragment? SelectContent { get; set; }

	protected override void OnParametersSet()
	{
		if (SelectContent == null && SelectText == null)
		{
			SelectText = "Choose Plan";
		}
	}

	protected override void OnInitialized()
	{
		if (Parent != null)
		{
			Parent.PlanCount += 1;
		}
	}
}