@*
//   Copyright 2022 DataHint BV
//   Copyright 2022 Ben Motmans
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
*@

@namespace Vizor
@inherits ViComponentBase

@if (ImageUrl != null)
{
	<span class="avatar @CssClass @ToAvatarSize(Size)" style="background-image: url(@ImageUrl)" @attributes="@AdditionalAttributes" />
}
else if (ChildContent != null)
{
	<span class="avatar @CssClass @ToAvatarSize(Size) @ColorConverter.ToBgColor(Color)" @attributes="@AdditionalAttributes">@ChildContent</span>
}

@code {

	// see https://preview.tabler.io/docs/avatars.html

	[Parameter]
	public ElementSize Size { get; set; } = ElementSize.Regular;

	[Parameter]
	public AvatarStyle Style { get; set; } = AvatarStyle.Regular;

	[Parameter]
	public ThemeColor? Color { get; set; }

	[Parameter]
	public string? ImageUrl { get; set; }

	[Parameter]
	public RenderFragment? ChildContent { get; set; }

	public static string? ToAvatarSize(ElementSize size)
	{
		return size switch
		{
			ElementSize.Small => "avatar-sm",
			ElementSize.ExtraSmall => "avatar-xs",
			ElementSize.Large => "avatar-lg",
			ElementSize.ExtraLarge => "avatar-xl",
			ElementSize.Medium => "avatar-md",
			_ => null
		};
	}

	public static string? ToAvatarStyle(AvatarStyle style)
	{
		return style switch
		{
			AvatarStyle.Circle => "avatar-rounded-circle",
			_ => null
		};
	}
}
