@*
//   Copyright 2022 DataHint BV
//   Copyright 2022 Ben Motmans
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
*@

@namespace Vizor
@inherits ViChildBase
@implements IViChild

<li class="nav-item" role="presentation">
	<a class="nav-link @(IsActive ? "active" : "")" data-bs-toggle="tab" href="@("#" + Id)" aria-selected="@IsActive">
		@Icon
		@Title
		@TitleText
	</a>
</li>

@code {

	//TODO: tabindex="-1" if not selected ?

	[Parameter]
	public RenderFragment? Title { get; set; }

	[Parameter]
	public string? TitleText { get; set; }

	[Parameter]
	public RenderFragment? Icon { get; set; }

	protected override async Task OnInitializedAsync()
	{
		if (ChildSelector == null)
			throw new InvalidOperationException($"{nameof(ViTabPage)} component can only be used inside a {nameof(ViTabControl)} component");

		if (Title == null && TitleText == null)
			throw new ArgumentException($"Parameter {nameof(Title)} or {nameof(TitleText)} must be set in the {nameof(ViTabPage)} component");

		await ChildSelector.AddChild(this);
	}

	private async Task ActivateAsync()
	{
		if (ChildSelector == null)
			return;

		await ChildSelector.ActivateChild(this);
	}
}
